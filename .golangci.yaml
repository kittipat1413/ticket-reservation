version: "2" # https://golangci-lint.run/usage/configuration/#config-file
linters:
  default: standard
  enable:
    - gosec  # Checks for common security issues in Go code.
    - misspell  # Finds and corrects spelling mistakes in comments and strings.
    - unconvert # Detect unnecessary type conversions.
    - bodyclose # Detects HTTP response bodies that are not closed.
    - testpackage # Checks for test files that do not belong to a package named `*_test`.
    - goconst # Detects repeated string literals and suggests using constants instead.
    - unparam # Detect unused function parameters.
  settings:
    gocyclo:
      min-complexity: 20  # Warn if a function has a complexity score of 20 or higher.
    errcheck:
      check-type-assertions: false  # Ignore type assertion errors.
      check-blank: false  # Ignore blank identifier errors.
    misspell:
      locale: US  # Use US English for spell checking.
  exclusions:
    generated: strict    # Mode of the generated files analysis.
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    paths:
      - ".*_test\\.go"
      - ".*_gen\\.go"
      - ".*mock.*\\.go"
      - "internal/.*/mocks/.*"
      - "internal/infra/db/model_gen/.*"
formatters:
  enable:
    - gofmt
  settings:
    gofmt:
      simplify: true     # Apply simplifications, such as removing redundant conversions.
  exclusions:
    generated: strict    # Mode of the generated files analysis.
    paths:               # Which file paths to exclude.
      - ".*_test\\.go"
      - ".*_gen\\.go"
      - ".*mock.*\\.go"
      - "internal/.*/mocks/.*"
      - "internal/infra/db/model_gen/.*"
run:
  timeout: 10m
  tests: false # Do not run linters on test files.
  relative-path-mode: gomod # The paths will be relative to the directory of the `go.mod` file.
  allow-parallel-runners: true # Allow multiple parallel golangci-lint instances running.
  allow-serial-runners: true # Allow multiple golangci-lint instances running, but serialize them around a lock.