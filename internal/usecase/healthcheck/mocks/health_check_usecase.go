// Code generated by MockGen. DO NOT EDIT.
// Source: ./main.go

// Package healthcheck_usecasemocks is a generated GoMock package.
package healthcheck_usecasemocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockHealthCheckUsecase is a mock of HealthCheckUsecase interface.
type MockHealthCheckUsecase struct {
	ctrl     *gomock.Controller
	recorder *MockHealthCheckUsecaseMockRecorder
}

// MockHealthCheckUsecaseMockRecorder is the mock recorder for MockHealthCheckUsecase.
type MockHealthCheckUsecaseMockRecorder struct {
	mock *MockHealthCheckUsecase
}

// NewMockHealthCheckUsecase creates a new mock instance.
func NewMockHealthCheckUsecase(ctrl *gomock.Controller) *MockHealthCheckUsecase {
	mock := &MockHealthCheckUsecase{ctrl: ctrl}
	mock.recorder = &MockHealthCheckUsecaseMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHealthCheckUsecase) EXPECT() *MockHealthCheckUsecaseMockRecorder {
	return m.recorder
}

// CheckReadiness mocks base method.
func (m *MockHealthCheckUsecase) CheckReadiness(ctx context.Context) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckReadiness", ctx)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckReadiness indicates an expected call of CheckReadiness.
func (mr *MockHealthCheckUsecaseMockRecorder) CheckReadiness(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckReadiness", reflect.TypeOf((*MockHealthCheckUsecase)(nil).CheckReadiness), ctx)
}
